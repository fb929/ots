on:
  push:
    branches:
      - main

name: dev build

jobs:
  build:
    name: build release
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        arch:
          - noarch
        os:
          - linux
        include:
          - arch: noarch
            rpm_arch: noarch
    steps:
      # checkout code
      - uses: actions/checkout@v3
      # get latest release for generate build number
      - name: get latest release
        id: latest-release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
          token: ${{ secrets.GITHUB_TOKEN }}
      # build number increment
      - name: generate build number
        id: buildnumber
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prefix: ${{ runner.os }}-${{ matrix.arch }}-${{ github.ref_name}}-${{ steps.latest-release.outputs.release }}
      - name: debug old build-number
        run: echo ${{ steps.buildnumber.outputs.build_number }}
      # short sha for generate build bumber
      - name: get sha_short
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      # generate build number
      - name: generate FPM_BUILD_NUMBER
        id: fpm-build-number
        run: |
          FPM_BUILD_NUMBER=${{ steps.buildnumber.outputs.build_number }}.${{ steps.vars.outputs.sha_short }}
          echo FPM_BUILD_NUMBER=$FPM_BUILD_NUMBER >> $GITHUB_OUTPUT
      - name: debug FPM_BUILD_NUMBER
        run: echo FPM_BUILD_NUMBER=${{ steps.fpm-build-number.outputs.FPM_BUILD_NUMBER }}

      # release version like in "release" workflow
      - name: get release version
        id: release-version
        run: echo ${{ steps.latest-release.outputs.release }} | sed 's|^[a-zA-Z]\+|RELEASE_VERSION=|' >> $GITHUB_OUTPUT

      # cache for pip
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # build code
      - name: run make
        run: make build

      # create asset {{
      - name: create package deb
        uses: fb929/github-action-fpm@master
        with:
          fpm_opts:
            --name ${{ github.event.repository.name }}
            --version ${{ steps.release-version.outputs.RELEASE_VERSION }}
            --iteration ${{ steps.fpm-build-number.outputs.FPM_BUILD_NUMBER }}
            --architecture ${{ matrix.arch }}
            --exclude '*/.gitignore'
            --exclude '*/.git'
            --input-type dir
            --chdir ./build
            --config-files etc/
            --output-type deb
          fpm_args: ./
      - name: create package rpm
        uses: fb929/github-action-fpm@master
        with:
          fpm_opts:
            --name ${{ github.event.repository.name }}
            --version ${{ steps.release-version.outputs.RELEASE_VERSION }}
            --iteration ${{ steps.fpm-build-number.outputs.FPM_BUILD_NUMBER }}
            --architecture ${{ matrix.rpm_arch }}
            --exclude '*/.gitignore'
            --exclude '*/.git'
            --input-type dir
            --chdir ./build
            --config-files etc/
            --output-type rpm
          fpm_args: ./
      # }}

      - name: debug ls
        run: |
          ls -al ./

      # upload artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }}-${{ steps.fpm-build-number.outputs.FPM_BUILD_NUMBER }}-${{ matrix.arch }}
          path: |
            *.deb
            *.rpm
